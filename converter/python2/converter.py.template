# Zawgyi<>Unicode converter python module
# Based on rules from Parabaik Myanmar Text Converter
# Copyright (C) 2014 Ngwe Tun (Solveware Solution)
# Copyright (C) 2014 Thura Hlaing

# This file is part of Paytan.

# Paytan is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Paytan is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with Foobar.  If not, see <http://www.gnu.org/licenses/>.

import re

def uni512zg1(input_text=""):
    output_text = input_text
    {% for rule in uni512zg1_rules -%}
    output_text = re.sub(u'{{rule.0}}', u'{{rule.1|replace("$","\\\\") }}', output_text, flags=re.M|re.U)
    {# # debugging -#}
    {# print("{{rule}}".replace("$", "\\"), output_text) -#}
    {% endfor -%}
    return output_text

def zg12uni51(input_text=""):
    output_text = input_text
    {% for rule in zg12uni51_rules -%}
    output_text = re.sub(u'{{rule.0}}', u'{{rule.1|replace("$", "\\\\") }}', output_text, flags=re.M|re.U)
    {# # debugging -#}
    {# print("{{rule}}".replace("$", "\\"), output_text) -#}
    {% endfor -%}
    return output_text

def is_zawgyi (input_text):
	return re.search (u'{{ is_zawgyi_rule }}', input_text, flags=re.U) != None